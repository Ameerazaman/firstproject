<!doctype html>

<html lang="en">

<head>

  <!-- Required meta tags -->

  <meta charset="utf-8">

  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- Bootstrap CSS -->

  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/css/bootstrap.min.css"
    integrity="sha384-r4NyP46KrjDleawBgD5tp8Y7UzmLA05oM1iAEQ17CSuDqnUK2+k9luXQOfXJCJ4I" crossorigin="anonymous">

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css"
    integrity="sha512-PgQMlq+nqFLV4ylk1gwUOgm6CtIIXkKwaIHp/PAIWHzig/lKZSEGKEysh0TCVbHJXCLN7WetD8TFecIky75ZfQ=="
    crossorigin="anonymous" />

  <link rel="stylesheet" type="text/css" href="css/style.css">

  <title>NirajCart</title>
  <style>
    import url('https://fonts.googleapis.com/css2?family=Mulish:wght@300&display=swap');

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Mulish', sans-serif;
    }

    :root {
      --text-clr: #4f4f4f;
    }

    p {
      color: #6c757d;
    }

    a {
      text-decoration: none;
      color: var(--text-clr);
    }

    a:hover {
      text-decoration: none;
      color: var(--text-clr);
    }

    h2 {
      color: var(--text-clr);
      font-size: 1.5rem;
    }

    .main_cart {
      background: #fff;
    }

    .card {
      border: none;
    }

    .product_img img {
      min-width: 80px;
      max-height: 80px;
    }

    .product_name {
      color: black;
      font-size: 1.4rem;
      text-transform: capitalize;
      font-weight: 500;
    }

    .card-title p {
      font-size: 0.9rem;
      font-weight: 500;
    }

    .remove-and-wish p {
      font-size: 0.8rem;
      margin-bottom: 0;
    }

    .price-money h3 {
      font-size: 1rem;
      font-weight: 600;
    }

    .set_quantity {
      position: relative;
    }

    .set_quantity::after {
      content: "(Note, 1 piece)";
      width: auto;
      height: auto;
      text-align: center;
      position: absolute;
      bottom: -20px;
      right: 1.5rem;
      font-size: 0.8rem;
    }

    .page-link {
      line-height: 16px;
      width: 45px;
      font-size: 1rem;
      display: flex;
      justify-content: center;
      align-items: center;
      color: #495057;
    }

    .page-item input {
      line-height: 22px;
      padding: 3px;
      font-size: 15px;
      display: flex;
      justify-content: center;
      align-items: center;
      text-align: center;
    }

    .page-link:hover {
      text-decoration: none;
      color: #495057;
      outline: none !important;
    }

    .page-link:focus {
      box-shadow: none;
    }

    .price_indiv p {
      font-size: 1.1rem;
    }

    .fa-heart:hover {
      color: red;
    }

    h1,
    h5,
    h3 {
      font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    }
  </style>

</head>

<body class="bg-light">
  <br><br>
  {{#if empty}}
  <div class="container-fluid  mt-100">
    <div class="container-fluid mt-100">
      <div class="row justify-content-center"> <!-- Adding justify-content-center class -->
        <div class="col-md-6"> <!-- Adjusting column width to center the card -->
          <div class="card">
            <div class="card-body cart">
              <div class="col-sm-12 empty-cart-cls text-center">
                <img src="https://i.imgur.com/dCdflKN.png" width="130" height="130" class="img-fluid mb-4 mr-3">
                <h3><strong>Your Cart is Empty</strong></h3>
                <h4>Add something to make me happy</h4>
                <a href="/user/product" class="btn btn-primary cart-btn-transform m-3" data-abc="true">continue
                  shopping</a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <style>
      body {
        background-color: #eee;
        font-family: 'Calibri', sans-serif !important;
      }

      .mt-100 {
        margin-top: 100px;

      }


      .card {
        margin-bottom: 30px;
        border: 0;
        -webkit-transition: all .3s ease;
        transition: all .3s ease;
        letter-spacing: .5px;
        border-radius: 8px;
        -webkit-box-shadow: 1px 5px 24px 0 rgba(68, 102, 242, .05);
        box-shadow: 1px 5px 24px 0 rgba(68, 102, 242, .05);
      }

      .card .card-header {
        background-color: #fff;
        border-bottom: none;
        padding: 24px;
        border-bottom: 1px solid #f6f7fb;
        border-top-left-radius: 8px;
        border-top-right-radius: 8px;
      }

      .card-header:first-child {
        border-radius: calc(.25rem - 1px) calc(.25rem - 1px) 0 0;
      }



      .card .card-body {
        padding: 30px;
        background-color: transparent;
      }

      .btn-primary,
      .btn-primary.disabled,
      .btn-primary:disabled {
        background-color: #4466f2 !important;
        border-color: #4466f2 !important;
      }

      .discount {
        display: flex;
        align-items: center;
        column-gap: 20px;
        margin-block-end: 20px;
        /* border: 1px solid var(--border-color);
    border-radius: var(--border-radius); */
      }

      .discount input {
        border: 1px solid var(--border-color);
        border-radius: 30px;
        padding: 18px 16px;
        width: 242px;
      }

      .discount button {
        background-color: var(--pri-color);
        color: var(--white);
        border-radius: 30px;
        padding: 18px 16px;
        border: none;
        font-weight: var(--font-weight-SemiBold);
        cursor: pointer;
        width: 102px;

      }
    </style>
    {{else}}
    <div class="container-fluid">

      <div class="row">

        <div class="col-md-10 col-11 mx-auto">

          <div class="row mt-5 gx-3">
            <h5 style="color: red;">{{this.Outofstock}}</h5>
            <!-- left side div -->

            <div class="col-md-12 col-lg-8 col-11 mx-auto main_cart mb-lg-0 mb-5 shadow">
              <span style="color: red;">{{this.message}}</span>
              {{#each data}}
              <div class="card p-2">

                <div class="row">

                  <!-- cart images div -->

                  <div
                    class="col-md-3 col-4 mx-auto bg-light d-flex justify-content-center align-items-center shadow product_img">

                    <img style="width:auto;height:auto" src="/images/{{this.product.productImage1}}" class="img-fluid"
                      alt="cart img">

                  </div>

                  <!-- cart product details -->

                  <div class="col-md-7 col-11 mx-auto px-4 mt-2">

                    <div class="row">

                      <!-- product nameÂ  -->

                      <div class="col-6 card-title">

                        <h1 class="mb-4 product_name">{{this.product.product}}</h1>
                        <h1 style="display: none;" id="product_stock{{this.product._id}}" class="mb-4 product_name">
                          {{this.product.quantity}}
                        </h1>
                        <h1 style="display: none;" id="product_price{{this.product._id}}" class="mb-4 product_name">
                          {{this.product.price}}
                        </h1>
                        <small style="color: green;">Product offer </small>
                        <p style="color: red;" class="discount mb-2" id="product_discount{{this.product._id}}">
                          {{this.product.discount}}(off)</p>
                        <p style="color: rgb(255, 0, 30);" class="mb-2">{{this.product.status}}</p>



                      </div>

                      <!-- quantity inc dec -->

                      <div class="col-6">

                        <ul class="pagination justify-content-end set_quantity">

                          <li class="page-item">

                            <button class="page-link" onclick="decQty('{{this.proId}}')">
                              <i class="fas fa-minus"></i>
                            </button>

                          </li>

                          <li class="page-item"><input type="text" name="" class="page-link" value="{{this.quantity}}"
                              id="qtyNo{{this.proId}}">


                          </li>

                          <li class="page-item">

                            <button class="page-link" onclick="incQty('{{this.proId}}')">
                              <i class="fas fa-plus"></i>
                            </button>


                          </li>

                        </ul>

                      </div>

                    </div>

                    <!-- //remover move and price -->

                    <div class="row">

                      <div class="col-8 d-flex justify-content-between remove_wish">

                        <p onclick="deleteProduct('{{this._id}}')"><i class="fas fa-trash-alt"></i> REMOVE ITEM</p>

                        <p><i class="fas fa-heart"></i>MOVE TO WISH LIST </p></a>

                      </div>

                      <div class="col-4 d-flex justify-content-end price_money">

                        <h5><span id="itemval{{this.product._id}}" class="cart-price">{{this.subtotal}} </span></h5>
                        <span id="item_discount" style="display: none;"
                          class="cart-discount">{{this.product.discount}}</span>

                      </div>

                    </div>

                  </div>

                </div>

              </div>
              <br>

              {{/each}}
              <!-- 2nd cart product -->

            </div>

            <!-- right side div -->

            <div class="col-md-12 col-lg-4 col-11 mx-auto mt-lg-0 mt-md-5">

              <div class="right_side p-3 shadow bg-white">

                <h3 class="product_name mb-5">The Total Amount Of</h3>
                {{#each result}}
                <div class="price_indiv d-flex justify-content-between">

                  <p>Sub Total</p>

                  <p><span id="product_total_amt">{{this.totalPrice}}</span></p>

                </div>

                <div class="price_indiv d-flex justify-content-between">

                  <p>Total Discount</p>


                  <p><span id="total_discount">{{this.totalDiscount}}</span></p>
                </div>
                {{/each}}
                <div class="price_indiv d-flex justify-content-between">

                  <p>Shipping charge</p>

                  <p><span id="shipping_charge">{{this.shippingCharge}}</span></p>

                </div>
                
                <div class="total-amt d-flex justify-content-between font-weight-bold">

                  <p id="category_discount">Category Discount</p>

                  <p><span id="total_category_discount">{{this.categoryOffer}}</span></p>

                </div>
               

                <hr />

                <div class="total-amt d-flex justify-content-between font-weight-bold">

                  <p>The total amount of (including VAT)</p>

                  <p><span id="total_cart_amt">{{this.totalAmt}}</span></p>

                </div>


                {{#if couponDiscount}}

                <div class="total-amt d-flex justify-content-between font-weight-bold">

                  <p>couponDiscount</p>

                  <p><span id="total_coupon_dis">{{this.couponDiscount}}</span></p>

                </div>
                {{/if}}


                {{#if totalAmount}}
                <div class="total-amt d-flex justify-content-between font-weight-bold">

                  <p>Total Amount</p>

                  <p><span id="total_amt">{{this.totalAmount}}</span></p>

                </div>
                {{/if}}
                <button class="btn btn-primary text-uppercase"><a style="color: white;"
                    href="/checkout">Checkout</a></button>

              </div>

              <!-- discount code part -->



              <!-- discount code ends -->




            </div>

          </div>

        </div>

      </div>

    </div>
    {{/if}}
    <br><br><br>
</body>

</html>

<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
  integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>

<script src="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/js/bootstrap.min.js"
  integrity="sha384-oesi62hOLfzrys4LxRF63OJCXdXDipiYWBnvTl9Y9/TRlw5xlKIEHpNyvvDShgf/" crossorigin="anonymous"></script>




<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script type="text/javascript">


  function incQty(prodId) {
    var quantity = document.getElementById("qtyNo" + prodId)
    var categoryOffer = document.getElementById("total_category_discount").innerText
    console.log(categoryOffer,"offer")
    var productPrice = parseInt(document.getElementById("product_price" + prodId).innerText)
    var checkOutAmount = document.getElementById("total_cart_amt").innerText
    var deliveryFee = document.getElementById("shipping_charge")
    var productDiscount = parseInt(document.getElementById("product_discount" + prodId).innerText)
    var quantityVal = parseInt(document.getElementById("qtyNo" + prodId).value)
    console.log(quantityVal, "quantity", productDiscount, "discount", productPrice, "total", checkOutAmount, "checkout amount")
    var stockVal = parseInt(document.getElementById("product_stock" + prodId).innerText);

    console.log(quantityVal, "quantity", stockVal, "stock")
    if (quantityVal >= 5) {

      swal({
        title: "Product Limit Reached",
        text: "You can only add 5 No's per product",
        timer: 4000
      });
    } else {

      if (quantityVal < stockVal) {
        quantity.value = parseInt(quantity.value) + 1;

        fetch("/cart/inc_qty/" + prodId, { method: 'PUT' })
          .then((response) => {

            if (!response.ok) {
              throw new Error('Network response was not ok.');
            }
            return response.json();
          })
          .then((newData) => {
            console.log("newdata")
          
            console.log(categoryOffer, "offer")
            var subTotal = 0;
            console.log("fetch", quantity.value)
            var productprice = (quantity.value * productPrice)
            var totalDiscount = (quantity.value * productDiscount)
            console.log(productprice, "productPrice", totalDiscount, "totaldicount")
            document.getElementById("itemval" + prodId).innerHTML = productprice
            document.getElementById("item_discount").innerHTML = totalDiscount

            const nl = document.querySelectorAll(".cart-price")
            let priceList = Array.from(nl)
            if (nl) {
              subTotal = priceList.reduce((total, value) => {
                var price = parseInt(value.innerHTML)
                return total += price;
              }, 0)
            }
            var subDiscount = 0
            const discount = document.querySelectorAll(".cart-discount")
            let discountList = Array.from(discount)
            if (discount) {
              subDiscount = discountList.reduce((total, value) => {
                var price = parseInt(value.innerHTML)
                return total += price;
              }, 0)
            }

            console.log(subDiscount, "discountprice")
            document.getElementById("product_total_amt").innerHTML = subTotal
            document.getElementById("total_discount").innerHTML = subDiscount
            var checkOutPrice = (subTotal - subDiscount)-categoryOffer
             console.log("checkoutprice", checkOutPrice)
            
           
            if (checkOutPrice <= 10000) {
              deliveryFee.innerHTML = "Rs.90"
              document.getElementById("total_cart_amt").innerHTML = (checkOutPrice + 90)


            }
            else {
              console.log("price is less")
              deliveryFee.innerHTML = 0
              document.getElementById("total_cart_amt").innerHTML = checkOutPrice
            }
            console.log("price",checkOutPrice)
          })
          .catch((error) => {

            console.log('Error:', error.message);
          });
      }
      else {
        swal({
          title: "Product Out Of Stock",
          text: "Cannot add more quantity",
          timer: 3000
        });
      }
    }
  }

</script>
<script>
  function decQty(prodId) {
    console.log("deccrement")
    var quantity = document.getElementById("qtyNo" + prodId)
   var categoryOffer = document.getElementById("total_category_discount").innerHTML
    var productPrice = parseInt(document.getElementById("product_price" + prodId).innerText)
    var checkOutAmount = document.getElementById("total_cart_amt").innerText
    var deliveryFee = document.getElementById("shipping_charge")
    var productDiscount = parseInt(document.getElementById("product_discount" + prodId).innerText)
    var quantityVal = parseInt(document.getElementById("qtyNo" + prodId).value)
    console.log(quantityVal, "quantity", productDiscount, "discount", productPrice, "total", checkOutAmount, "checkout amount")
    var stockVal = parseInt(document.getElementById("product_stock" + prodId).innerText);

    console.log(quantityVal, "quantity", stockVal, "stock")
    if (quantityVal == 1) {

      swal({
        title: "Product Limit Reached",
        text: "You can purchase atleast one product",
        timer: 4000
      });
    } else {

      if (quantityVal < stockVal) {
        quantity.value = parseInt(quantity.value) - 1;

        fetch("/cart/dec_qty/" + prodId, { method: 'PUT' })

          .then((response) => {
            console.log("hai")
            if (!response.ok) {
              throw new Error('Network response was not ok.');
            }
            return response.json();
          })
          .then((newData) => {

           
            var subTotal = 0;
            console.log("fetch", quantity.value)
            var productprice = (quantity.value * productPrice)
            var totalDiscount = (quantity.value * productDiscount)
            console.log(productprice, "productPrice", totalDiscount, "totaldicount")
            document.getElementById("itemval" + prodId).innerHTML = productprice
            document.getElementById("item_discount").innerHTML = totalDiscount

            const nl = document.querySelectorAll(".cart-price")
            let priceList = Array.from(nl)
            if (nl) {
              subTotal = priceList.reduce((total, value) => {
                var price = parseInt(value.innerHTML)
                return total += price;
              }, 0)
            }
            var subDiscount = 0
            const discount = document.querySelectorAll(".cart-discount")
            let discountList = Array.from(discount)
            if (discount) {
              subDiscount = discountList.reduce((total, value) => {
                var price = parseInt(value.innerHTML)
                return total += price;
              }, 0)
            }

            console.log(subDiscount, "discountprice")
            document.getElementById("product_total_amt").innerHTML = subTotal
            document.getElementById("total_discount").innerHTML = subDiscount
            var checkOutPrice = (subTotal - subDiscount)
            document.getElementById("total_cart_amt").innerHTML = checkOutPrice-categoryOffer
            console.log("checkoutprice", checkOutPrice)
            if (checkOutPrice >= 3000) {
              deliveryFee.innerHTML = "Rs.90"
              document.getElementById("total_cart_amt").innerHTML = (checkOutPrice + 90)-categoryOffer;

            }
            else {
              console.log("price is less")
              deliveryFee.innerHTML = "Free"
              document.getElementById("total_cart_amt").innerHTML = checkOutPrice
            }
          })
          .catch((error) => {

            console.log('Error:', error.message);
          });
      }
      else {
        swal({
          title: "Product Out Of Stock",
          text: "Cannot add more quantity",
          timer: 3000
        });
      }
    }
  }

</script>
<script>
  function deleteProduct(productId) {
    console.log("delete")
    swal({
      title: "Are you sure?",
      text: "Once deleted, you will not be able to recover this product!",
      icon: "warning",
      buttons: true,
      dangerMode: true,
    }).then((willDelete) => {
      if (willDelete) {
        // Perform AJAX request to delete the product
        fetch(`/cart/deletecart/${productId}`, {
          method: 'DELETE', // Change method to DELETE
        })
          .then(response => {
            if (response.ok) {
              // Successful deletion, show success message

              return response.json(); // Assuming your server returns JSON data
            } else {
              // Error occurred, show error message
              throw new Error('Failed to delete product');
            }
          })
          .then(data => {
            swal("Poof! Your product has been deleted!", { icon: "success" })
              .then(function () {
                window.location.href = "/cart/cartpage";
              });
          })
          .catch(error => {
            // Network error or server error, show error message
            swal("Error", error.message, "error");
          });
      } else {
        // User clicked cancel, do nothing
        swal("Your product is safe!");
      }
    });
  }
</script>
</script>